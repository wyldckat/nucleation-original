#!/bin/bash
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2008 OpenCFD Ltd.
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of the openfoam-ubuntu project for OpenFOAM. It is an
#     unofficial script.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     paraFoam
#
# Description
#     This script is part of the OpenFoam installer
#     It will enable you to view OpenFoam results with the system paraview
#
#------------------------------------------------------------------------------
Script=${0##*/}

#injected here by the installer
export Paraview_VERSION=
PV_EXE=

#neutralize the PATH and LD_LIBRARY_PATH into more general paths, in an attempt to minimize gcc library clashes
#NOTE: ${PV_EXE%/*} is the folder where paraview is, as long as the full path is given in PV_EXE
export PATH=$HOME/bin:/usr/local/bin:/usr/bin:/bin:${PV_EXE%/*}
export LD_LIBRARY_PATH=${PV_EXE%/*}

usage() {
   while [ "$#" -ge 1 ]; do echo "$1"; shift; done
   cat<<USAGE

usage: $Script [-case dir] [-time time] [-latestTime] [-data vtkFile] [-clean]

* start paraview $ParaView_VERSION with the OpenFOAM libraries
* default action will be to load an entire dataset
* clean option will remove VTK directory!
* script will only accept one option at a time

USAGE
   exit 1
}

getPrecision() {
   PRECISION="$(cat system/controlDict | grep 'timePrecision' | awk '{print $2}')"
}

# get a sensible caseName
caseName=${PWD##*/}

# parse options -> paraview versions other than 3.8
if [ "$#" -gt 0 ]; then
   case "$1" in
   -h | -help)
      usage
      ;;
   -case)
      shift
      caseDir=$1
      [ "$#" -ge 1 ] || usage "'-case' option requires an argument"
      cd "$caseDir" 2>/dev/null || usage "directory does not exist:  '$caseDir'"
      echo "foamToVTK"
      foamToVTK
      echo "$PV_EXE "--data=VTK/${caseDir}_..vtk""
      $PV_EXE --data=VTK/${caseDir}_..vtk
      exit
      ;;
   -time)
      echo "using time option!"
      shift
      caseTime=$1
      [ "$#" -ge 1 ] || usage "'-time' option requires an argument"
      echo "foamToVTK -time $1"
      foamToVTK -time $1 > f2vtk.log
      caseTime="$(grep "time =" f2vtk.log | awk -F'= ' '{print $2}')"
      caseData="$(grep "Internal" f2vtk.log | awk -F'VTK/' '{print $2}' | tr -d '\"')"
      rm f2vtk.log
      echo "time: ${caseTime}, data: ${caseData}"
      cd VTK/
      echo "$PV_EXE --data=$caseData"
      $PV_EXE --data=$caseData
      exit
      ;;
   -latestTime)
      [ "$#" -ge 1 ] || usage "ignoring additional arguments"
      echo "using latestTime option"
      # would improve performance a lot if we check if file is already there
      foamToVTK -latestTime > f2vtk.log
      caseTime="$(grep "time =" f2vtk.log | awk -F'= ' '{print $2}')"
      caseData="$(grep "Internal" f2vtk.log | awk -F'VTK/' '{print $2}' | tr -d '\"')"
      #rm f2vtk.log
      echo "time: ${caseTime}, data: ${caseData}"
      cd VTK/
      echo "$PV_EXE --data=$caseData"
      $PV_EXE --data=$caseData
      exit
      ;;
   -data)
      shift
      caseData=$1
      [ "$#" -ge 1 ] || usage "'-data' option requires an argument"
      $PV_EXE --data=$1
      exit
      ;;
   -clean)
      #rm -r VTK
      exit
      ;;
   *)
      usage "unknown option/argument: '$*'"
      exit
      ;;
   esac
fi

# paraview = 3.8? -> use native OFreader in 3.8
if [ "x$Paraview_VERSION" == "x3.8" ]; then
    caseFile="$caseName.foam"

    # Clean up on termination and on Ctrl-C
    trap "rm -f $caseFile 2>/dev/null; exit 0" EXIT TERM INT
    touch $caseFile
    $PV_EXE --data=$caseFile
    exit
fi

# in case of no arguments just convert all data to VTK
echo "foamToVTK"
foamToVTK
echo "$PV_EXE "--data=VTK/${caseName}_..vtk""
$PV_EXE "--data=VTK/${caseName}_..vtk"

